<?php
/**
 *
 * 
 *
 * Generated by <a href="http://enunciate.codehaus.org">Enunciate</a>.
 *
 */

namespace Gedcomx\Conclusion;

/**
 * A role that a specific person plays in an event.
 */
class EventRole extends \Gedcomx\Conclusion\Conclusion
{

    /**
     * The role type.
     *
     * @var string
     */
    private $type;

    /**
     * Reference to the person playing the role in the event.
     *
     * @var \Gedcomx\Common\ResourceReference
     */
    private $person;

    /**
     * Details about the role of the person in the event.
     *
     * @var string
     */
    private $details;

    /**
     * Constructs a EventRole from a (parsed) JSON hash
     *
     * @param array $o
     */
    public function __construct($o = null)
    {
        if ($o) {
            $this->initFromArray($o);
        }
    }

    /**
     * The role type.
     *
     * @return string
     */
    public function getType()
    {
        return $this->type;
    }

    /**
     * The role type.
     *
     * @param string $type
     */
    public function setType($type)
    {
        $this->type = $type;
    }
    /**
     * Reference to the person playing the role in the event.
     *
     * @return \Gedcomx\Common\ResourceReference
     */
    public function getPerson()
    {
        return $this->person;
    }

    /**
     * Reference to the person playing the role in the event.
     *
     * @param \Gedcomx\Common\ResourceReference $person
     */
    public function setPerson($person)
    {
        $this->person = $person;
    }
    /**
     * Details about the role of the person in the event.
     *
     * @return string
     */
    public function getDetails()
    {
        return $this->details;
    }

    /**
     * Details about the role of the person in the event.
     *
     * @param string $details
     */
    public function setDetails($details)
    {
        $this->details = $details;
    }
    /**
     * Returns the associative array for this EventRole
     *
     * @return array
     */
    public function toArray()
    {
        $a = parent::toArray();
        if ($this->type) {
            $a["type"] = $this->type;
        }
        if ($this->person) {
            $a["person"] = $this->person->toArray();
        }
        if ($this->details) {
            $a["details"] = $this->details;
        }
        return $a;
    }


    /**
     * Initializes this EventRole from an associative array
     *
     * @param array $o
     */
    public function initFromArray($o)
    {
        parent::initFromArray($o);
        if (isset($o['type'])) {
            $this->type = $o["type"];
        }
        if (isset($o['person'])) {
                $this->person = new \Gedcomx\Common\ResourceReference($o["person"]);
        }
        if (isset($o['details'])) {
                $this->details = $o["details"];
        }
    }
}
