<?php

/**
 *
 * 
 *
 * Generated by <a href="http://enunciate.codehaus.org">Enunciate</a>.
 *
 */

  namespace Gedcomx\Conclusion {

    /**
     * A person.
     */
    class Person extends \Gedcomx\Conclusion\Subject  {
    
      /**
       * Whether this person is the &quot;principal&quot; person extracted from the record.
       */
      private $principal;
      /**
       * Whether this person has been designated for limited distribution or display.
       */
      private $private;
    
      /**
       * Living status of the person as treated by the system.
       */
      private $living;
      /**
       * The gender conclusion for the person.
       */
      private $gender;
      /**
       * The name conclusions for the person.
       */
      private $names;
      /**
       * The fact conclusions for the person.
       */
      private $facts;
      /**
       * The references to the record fields being used as evidence.
       */
      private $fields;
      /**
       * Display properties for the person. Display properties are not specified by GEDCOM X core, but as extension elements by GEDCOM X RS.
       */
      private $displayExtension;

      /**
       * Constructs a Person from a (parsed) JSON hash
       */
      public function __construct($o = null) {
        if( $o ) {
          $this->initFromArray($o);
        }
      }
      
      /**
       * Whether this person is the &quot;principal&quot; person extracted from the record.
       */
      public function getPrincipal() {
        return $this->principal;
      }
      
      /**
       * Whether this person is the &quot;principal&quot; person extracted from the record.
       */
      public function setPrincipal($principal) {
        $this->principal = $principal;
      }
      /**
       * Whether this person has been designated for limited distribution or display.
       */
      public function getPrivate() {
        return $this->private;
      }
      
      /**
       * Whether this person has been designated for limited distribution or display.
       */
      public function setPrivate($private) {
        $this->private = $private;
      }
      /**
       * Living status of the person as treated by the system.
       */
      public function getLiving() {
        return $this->living;
      }
      
      /**
       * Living status of the person as treated by the system.
       */
      public function setLiving($living) {
        $this->living = $living;
      }
      /**
       * The gender conclusion for the person.
       */
      public function getGender() {
        return $this->gender;
      }
      
      /**
       * The gender conclusion for the person.
       */
      public function setGender($gender) {
        $this->gender = $gender;
      }
      /**
       * The name conclusions for the person.
       */
      public function getNames() {
        return $this->names;
      }
      
      /**
       * The name conclusions for the person.
       */
      public function setNames($names) {
        $this->names = $names;
      }
      /**
       * The fact conclusions for the person.
       */
      public function getFacts() {
        return $this->facts;
      }
      
      /**
       * The fact conclusions for the person.
       */
      public function setFacts($facts) {
        $this->facts = $facts;
      }
      /**
       * The references to the record fields being used as evidence.
       */
      public function getFields() {
        return $this->fields;
      }
      
      /**
       * The references to the record fields being used as evidence.
       */
      public function setFields($fields) {
        $this->fields = $fields;
      }
      /**
       * Display properties for the person. Display properties are not specified by GEDCOM X core, but as extension elements by GEDCOM X RS.
       */
      public function getDisplayExtension() {
        return $this->displayExtension;
      }
      
      /**
       * Display properties for the person. Display properties are not specified by GEDCOM X core, but as extension elements by GEDCOM X RS.
       */
      public function setDisplayExtension($displayExtension) {
        $this->displayExtension = $displayExtension;
      }
      /**
       * Returns the associative array for this Person
       */
      public function toArray() {
        $a = parent::toArray();
        if( $this->principal ) {
          $a["principal"] = $this->principal;
        }
        if( $this->private ) {
          $a["private"] = $this->private;
        }
        if( $this->living ) {
          $a["living"] = $this->living;
        }
        if( $this->gender ) {
          $a["gender"] = $this->gender->toArray();
        }
        if( $this->names ) {
          $ab = array();
          foreach( $this->names as $i => $x ) {
            $ab[$i] = $x->toArray();
          }
          $a['names'] = $ab;
        }
        if( $this->facts ) {
          $ab = array();
          foreach( $this->facts as $i => $x ) {
            $ab[$i] = $x->toArray();
          }
          $a['facts'] = $ab;
        }
        if( $this->fields ) {
          $ab = array();
          foreach( $this->fields as $i => $x ) {
            $ab[$i] = $x->toArray();
          }
          $a['fields'] = $ab;
        }
        if( $this->displayExtension ) {
          $a["display"] = $this->displayExtension->toArray();
        }
        return $a;
      }
      

      /**
       * Initializes this Person from an associative array
       */
      public function initFromArray($o) {
        parent::initFromArray($o);
        if( isset($o['principal']) ) {
          $this->principal = $o["principal"];
        }
        if( isset($o['private']) ) {
          $this->private = $o["private"];
        }
        if( isset($o['living']) ) {
          $this->living = $o["living"];
        }
        if( isset($o['gender']) ) {
          $this->gender = new \Gedcomx\Conclusion\Gender($o["gender"]);
        }
        $this->names = array();
        if( isset($o['names']) ) {
          foreach( $o['names'] as $i => $x ) {
            $this->names[$i] = new \Gedcomx\Conclusion\Name($x);
          }
        }
        $this->facts = array();
        if( isset($o['facts']) ) {
          foreach( $o['facts'] as $i => $x ) {
            $this->facts[$i] = new \Gedcomx\Conclusion\Fact($x);
          }
        }
        $this->fields = array();
        if( isset($o['fields']) ) {
          foreach( $o['fields'] as $i => $x ) {
            $this->fields[$i] = new \Gedcomx\Records\Field($x);
          }
        }
        if( isset($o['display']) ) {
          $this->displayExtension = new \Gedcomx\Conclusion\DisplayProperties($o["display"]);
        }
      }
    
    }
    
  }

?>
