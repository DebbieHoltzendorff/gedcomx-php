<?php
/**
 *
 * 
 *
 * Generated by <a href="http://enunciate.codehaus.org">Enunciate</a>.
 *
 */

namespace Gedcomx\Extensions\FamilySearch\Artifacts;

/**
 * FamilySearch-specific metadata about an artifact.
 */
class ArtifactMetadata
{

    /**
     * The type of the gender.
     *
     * @var string
     */
    private $artifactType;

    /**
     * The original filename of the memories item.
     *
     * @var string
     */
    private $filename;

    /**
     * The height of the artifact (presumably an image).
     *
     * @var integer
     */
    private $height;

    /**
     * The width of the artifact (presumably an image).
     *
     * @var integer
     */
    private $width;

    /**
     * Constructs a ArtifactMetadata from a (parsed) JSON hash
     *
     * @param array $o
     */
    public function __construct($o = null)
    {
        if ($o) {
            $this->initFromArray($o);
        }
    }

    /**
     * The type of the gender.
     *
     * @return string
     */
    public function getArtifactType()
    {
        return $this->artifactType;
    }

    /**
     * The type of the gender.
     *
     * @param string $artifactType
     */
    public function setArtifactType($artifactType)
    {
        $this->artifactType = $artifactType;
    }
    /**
     * The original filename of the memories item.
     *
     * @return string
     */
    public function getFilename()
    {
        return $this->filename;
    }

    /**
     * The original filename of the memories item.
     *
     * @param string $filename
     */
    public function setFilename($filename)
    {
        $this->filename = $filename;
    }
    /**
     * The height of the artifact (presumably an image).
     *
     * @return integer
     */
    public function getHeight()
    {
        return $this->height;
    }

    /**
     * The height of the artifact (presumably an image).
     *
     * @param integer $height
     */
    public function setHeight($height)
    {
        $this->height = $height;
    }
    /**
     * The width of the artifact (presumably an image).
     *
     * @return integer
     */
    public function getWidth()
    {
        return $this->width;
    }

    /**
     * The width of the artifact (presumably an image).
     *
     * @param integer $width
     */
    public function setWidth($width)
    {
        $this->width = $width;
    }
    /**
     * Returns the associative array for this ArtifactMetadata
     *
     * @return array
     */
    public function toArray()
    {
        $a = array();
        if ($this->artifactType) {
            $a["artifactType"] = $this->artifactType;
        }
        if ($this->filename) {
            $a["filename"] = $this->filename;
        }
        if ($this->height) {
            $a["height"] = $this->height;
        }
        if ($this->width) {
            $a["width"] = $this->width;
        }
        return $a;
    }

    /**
     * Returns the JSON string for this ArtifactMetadata
     *
     * @return string
     */
    public function toJson()
    {
        return json_encode($this->toArray());
    }

    /**
     * Initializes this ArtifactMetadata from an associative array
     *
     * @param array $o
     */
    public function initFromArray($o)
    {
        if (isset($o['artifactType'])) {
            $this->artifactType = $o["artifactType"];
        }
        if (isset($o['filename'])) {
                $this->filename = $o["filename"];
        }
        if (isset($o['height'])) {
                $this->height = $o["height"];
        }
        if (isset($o['width'])) {
                $this->width = $o["width"];
        }
    }
}
