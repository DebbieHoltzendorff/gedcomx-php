<?php
/**
 *
 * 
 *
 * Generated by <a href="http://enunciate.codehaus.org">Enunciate</a>.
 *
 */

namespace Gedcomx\Links;

/**
 * An data type that supports hypermedia controls (i.e. links).
 */
class HypermediaEnabledData extends \Gedcomx\Common\ExtensibleData
{

    /**
     * The list of hypermedia links. Links are not specified by GEDCOM X core, but as extension elements by GEDCOM X RS.
     *
     * @var \Gedcomx\Links\Link[]
     */
    private $links;

    /**
     * Constructs a HypermediaEnabledData from a (parsed) JSON hash
     *
     * @param array $o
     */
    public function __construct($o = null)
    {
        if ($o) {
            $this->initFromArray($o);
        }
    }

    /**
     * The list of hypermedia links. Links are not specified by GEDCOM X core, but as extension elements by GEDCOM X RS.
     *
     * @return \Gedcomx\Links\Link[]
     */
    public function getLinks()
    {
        return $this->links;
    }

    /**
     * The list of hypermedia links. Links are not specified by GEDCOM X core, but as extension elements by GEDCOM X RS.
     *
     * @param \Gedcomx\Links\Link[] $links
     */
    public function setLinks($links)
    {
        $this->links = $links;
    }
    /**
     * Returns the associative array for this HypermediaEnabledData
     *
     * @return array
     */
    public function toArray()
    {
        $a = parent::toArray();
        if ($this->links) {
            $ab = array();
            foreach ($this->links as $i => $x) {
                $ab[$i] = $x->toArray();
            }
            $a['links'] = $ab;
        }
        return $a;
    }


    /**
     * Initializes this HypermediaEnabledData from an associative array
     *
     * @param array $o
     */
    public function initFromArray($o)
    {
        parent::initFromArray($o);
        $this->links = array();
        if (isset($o['links'])) {
            foreach ($o['links'] as $i => $x) {
                    $this->links[$i] = new \Gedcomx\Links\Link($x);
            }
        }
    }
}
