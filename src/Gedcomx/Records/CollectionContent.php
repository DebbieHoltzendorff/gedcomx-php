<?php
/**
 *
 * 
 *
 * Generated by <a href="http://enunciate.codehaus.org">Enunciate</a>.
 *
 */

namespace Gedcomx\Records;

/**
 * A description of the content of a collection by resource type.
 */
class CollectionContent extends \Gedcomx\Links\HypermediaEnabledData
{

    /**
     * A completeness factor for this content aspect, a value between 0 and 1.
     *
     * @var double
     */
    private $completeness;

    /**
     * The count of the items applicable to this content aspect.
     *
     * @var integer
     */
    private $count;

    /**
     * The type of resource being covered in this collection.
     *
     * @var string
     */
    private $resourceType;

    /**
     * Constructs a CollectionContent from a (parsed) JSON hash
     *
     * @param array $o
     */
    public function __construct($o = null)
    {
        if ($o) {
            $this->initFromArray($o);
        }
    }

    /**
     * A completeness factor for this content aspect, a value between 0 and 1.
     *
     * @return double
     */
    public function getCompleteness()
    {
        return $this->completeness;
    }

    /**
     * A completeness factor for this content aspect, a value between 0 and 1.
     *
     * @param double $completeness
     */
    public function setCompleteness($completeness)
    {
        $this->completeness = $completeness;
    }
    /**
     * The count of the items applicable to this content aspect.
     *
     * @return integer
     */
    public function getCount()
    {
        return $this->count;
    }

    /**
     * The count of the items applicable to this content aspect.
     *
     * @param integer $count
     */
    public function setCount($count)
    {
        $this->count = $count;
    }
    /**
     * The type of resource being covered in this collection.
     *
     * @return string
     */
    public function getResourceType()
    {
        return $this->resourceType;
    }

    /**
     * The type of resource being covered in this collection.
     *
     * @param string $resourceType
     */
    public function setResourceType($resourceType)
    {
        $this->resourceType = $resourceType;
    }
    /**
     * Returns the associative array for this CollectionContent
     *
     * @return array
     */
    public function toArray()
    {
        $a = parent::toArray();
        if ($this->completeness) {
            $a["completeness"] = $this->completeness;
        }
        if ($this->count) {
            $a["count"] = $this->count;
        }
        if ($this->resourceType) {
            $a["resourceType"] = $this->resourceType;
        }
        return $a;
    }


    /**
     * Initializes this CollectionContent from an associative array
     *
     * @param array $o
     */
    public function initFromArray($o)
    {
        parent::initFromArray($o);
        if (isset($o['completeness'])) {
                $this->completeness = $o["completeness"];
        }
        if (isset($o['count'])) {
                $this->count = $o["count"];
        }
        if (isset($o['resourceType'])) {
                $this->resourceType = $o["resourceType"];
        }
    }
}
