<?php
/**
 *
 * 
 *
 * Generated by <a href="http://enunciate.codehaus.org">Enunciate</a>.
 *
 */

namespace Gedcomx\Records;

/**
 * A descriptor for a common set of records.
 */
class RecordDescriptor extends \Gedcomx\Links\HypermediaEnabledData
{

    /**
     * The language of this record description.
     *
     * @var string
     */
    private $lang;

    /**
     * Descriptors of the fields that are applicable to this record.
     *
     * @var \Gedcomx\Records\FieldDescriptor[]
     */
    private $fields;

    /**
     * Constructs a RecordDescriptor from a (parsed) JSON hash
     *
     * @param array $o
     */
    public function __construct($o = null)
    {
        if ($o) {
            $this->initFromArray($o);
        }
    }

    /**
     * The language of this record description.
     *
     * @return string
     */
    public function getLang()
    {
        return $this->lang;
    }

    /**
     * The language of this record description.
     *
     * @param string $lang
     */
    public function setLang($lang)
    {
        $this->lang = $lang;
    }
    /**
     * Descriptors of the fields that are applicable to this record.
     *
     * @return \Gedcomx\Records\FieldDescriptor[]
     */
    public function getFields()
    {
        return $this->fields;
    }

    /**
     * Descriptors of the fields that are applicable to this record.
     *
     * @param \Gedcomx\Records\FieldDescriptor[] $fields
     */
    public function setFields($fields)
    {
        $this->fields = $fields;
    }
    /**
     * Returns the associative array for this RecordDescriptor
     *
     * @return array
     */
    public function toArray()
    {
        $a = parent::toArray();
        if ($this->lang) {
            $a["lang"] = $this->lang;
        }
        if ($this->fields) {
            $ab = array();
            foreach ($this->fields as $i => $x) {
                $ab[$i] = $x->toArray();
            }
            $a['fields'] = $ab;
        }
        return $a;
    }


    /**
     * Initializes this RecordDescriptor from an associative array
     *
     * @param array $o
     */
    public function initFromArray($o)
    {
        parent::initFromArray($o);
        if (isset($o['lang'])) {
            $this->lang = $o["lang"];
        }
        $this->fields = array();
        if (isset($o['fields'])) {
            foreach ($o['fields'] as $i => $x) {
                    $this->fields[$i] = new \Gedcomx\Records\FieldDescriptor($x);
            }
        }
    }
}
